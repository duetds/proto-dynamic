{"version":3,"file":"my-element_test.js","sourceRoot":"","sources":["../../src/test/my-element_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAA;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAA;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAA;AAE5C,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;IACvB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;QAC/C,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,CAAA;IAClC,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,2BAA2B,CAAC,CAAA;QACzD,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,uCAAuC,CAAC,CAAA;QACrE,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,2BAA2B,CAAC,CAAc,CAAA;QACxE,MAAM,MAAM,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAA;QACtD,MAAM,CAAC,KAAK,EAAE,CAAA;QACd,MAAM,EAAE,CAAC,cAAc,CAAA;QACvB,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,2BAA2B,CAAC,CAAc,CAAA;QACxE,MAAM,EAAE,CAAC,cAAc,CAAA;QACvB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;IACvD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { assert, fixture } from \"@open-wc/testing\"\nimport { html } from \"lit/static-html.js\"\nimport { MyElement } from \"../my-element.js\"\n\nsuite(\"my-element\", () => {\n  test(\"is defined\", () => {\n    const el = document.createElement(\"my-element\")\n    assert.instanceOf(el, MyElement)\n  })\n\n  test(\"renders with default values\", async () => {\n    const el = await fixture(html`<my-element></my-element>`)\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test(\"renders with a set name\", async () => {\n    const el = await fixture(html`<my-element name=\"Test\"></my-element>`)\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, Test!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test(\"handles a click\", async () => {\n    const el = (await fixture(html`<my-element></my-element>`)) as MyElement\n    const button = el.shadowRoot!.querySelector(\"button\")!\n    button.click()\n    await el.updateComplete\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 1</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test(\"styling applied\", async () => {\n    const el = (await fixture(html`<my-element></my-element>`)) as MyElement\n    await el.updateComplete\n    assert.equal(getComputedStyle(el).paddingTop, \"16px\")\n  })\n})\n"]}