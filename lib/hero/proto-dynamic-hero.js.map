{"version":3,"file":"proto-dynamic-hero.js","sourceRoot":"","sources":["../../src/hero/proto-dynamic-hero.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, html, LitElement, nothing} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\ninterface Sys {\n  sys: {\n    contentType: {\n      sys: {\n        id: string\n      };\n    };\n  };\n}\n\ninterface ButtonResource extends Sys{\n  fields: {\n    key?: string;\n    text?: {value: string};\n    icon?: {value: string};\n    iconColor?: string;\n    url?: {value: string};\n    variation?: string;\n  };\n}\n\ninterface ContentResource extends Sys {\n  fields: {\n    key?: string;\n    linkIconColorVariation?: string;\n    linkVariation?: string;\n    content?: {\n      fields?: {\n        icon?: string;\n        key?: string;\n        text?: string;\n        url?: string;\n      }\n    }[]\n  };\n}\n\ninterface HeroFields {\n  heading?: {value: string};\n  intro?: {content: {content: {value: string}[]}[]};\n  content?: ContentResource[];\n  buttons?: ButtonResource[];\n  icon?: string;\n}\n\ninterface HeroItem {\n  fields?: HeroFields;\n}\n\n@customElement('proto-dynamic-hero')\nexport class ProtoDynamicHero extends LitElement {\n  @property({type: Array}) props?: HeroItem[];\n\n  static override styles = css`\n      /* Only display the spacer in heading if a \"back link\" is present */\n\n      duet-page-heading div[slot='heading'] > duet-spacer:first-child {\n          display: none;\n      }\n\n      /* Only display the after-content spacer if content is present */\n\n      div[slot='main'] > duet-spacer + duet-spacer:last-child {\n          display: none;\n      }\n\n      .grid {\n          display: grid;\n          grid-template-columns: 1fr;\n          max-width: 100%;\n          align-items: center;\n      }\n\n      @media (min-width: 48em) {\n          .grid {\n              grid-template-columns: 1fr 1fr;\n              column-gap: 12px;\n              row-gap: 8px;\n          }\n      }\n\n      @media (min-width: 62em) {\n          .grid {\n              grid-template-columns: 1fr 1fr 1fr;\n              column-gap: 12px;\n              row-gap: 8px;\n          }\n      }\n  `;\n\n  override render() {\n    const fields = this.props?.[0]?.fields;\n    const headingObject = fields?.heading; // { value?: string } | undefined\n    const introObject = fields?.intro;\n    const content = fields?.content\n    const buttons = fields?.buttons\n\n    return html`\n      <!--   TODO: duet-page-heading creates horizontal padding on smaller screens   -->\n      <duet-page-heading\n        data-testid=\"dynamichero_page-heading\"\n        icon=${fields?.icon ?? nothing}\n        id=\"dynamichero_page-heading\"\n        layout=\"fluid\"\n      >\n        <!-- Title -->\n        ${headingObject\n          ? html`\n            <duet-heading\n              data-testid=\"dynamichero_page-title\"\n              id=\"dynamichero_page-title\"\n              level=\"h1\"\n              margin=\"none\"\n              slot=\"heading\"\n            >\n              ${headingObject}\n            </duet-heading>\n          `\n          : null}\n      </duet-page-heading>\n\n      <!-- Render if intro exists -->\n      ${introObject\n        ? html`\n          <div>\n            ${introObject.content[0].content[0]?.value}\n            <duet-spacer size=\"large\"></duet-spacer>\n          </div>\n        `\n        : null}\n\n      <!--  TODO: Check if this main is required. LLA might've forgotten it   -->\n      <div slot=\"main\">\n        <!-- Custom content -->\n        <slot></slot>\n      </div>\n\n      <!-- Dynamic Group -->\n      ${content?.length && content.length > 0\n        ? html` <div class=\"grid\" data-testid=\"dynamichero_content\" id=\"dynamichero_content\">\n          ${content.map(content => {\n            if (content.sys.contentType.sys.id === \"dynamicGroup\") {\n              console.log(\n                'content.sys.contentType.sys.id',\n                content.sys.contentType.sys.id\n              );\n              return html`\n                <duet-link\n                  id=${content.fields.key ?? nothing}\n                  icon=${content.fields.content?.[0]?.fields?.icon ?? nothing}\n                  icon-color=${content.fields.linkIconColorVariation ?? nothing}\n                  variation=${content.fields.linkVariation ?? nothing}\n                  url=${content.fields.content?.[0]?.fields?.url ?? nothing}\n                >\n                  ${content.fields.content?.[0]?.fields?.text ?? \"\"}\n                </duet-link>\n              `\n            }\n            return nothing\n          })}\n        </div> `\n        : nothing}\n\n      <!-- Buttons -->\n      ${buttons?.length && buttons.length > 0\n        ? html`\n            <div class=\"grid\" data-testid=\"dynamichero_buttons\" id=\"dynamichero_buttons\">\n              ${buttons.map(button => {\n          if (button.sys.contentType.sys.id === \"linkResource\") {\n            return html`\n                    <duet-link\n                      id=${button.fields.key ?? nothing}\n                      icon=${button.fields.icon?.value ?? nothing}\n                      url=${button.fields.url?.value ?? nothing}\n                    >\n                      ${button.fields.text ?? \"\"}\n                    </duet-link>\n                  `\n          }\n          if (button.sys.contentType.sys.id === \"buttonResource\") {\n            return html` <duet-button\n                    id=${button.fields.key ?? nothing}\n                    icon=${button.fields.icon?.value ?? nothing}\n                    >${button.fields.text ?? \"\"}\n                  </duet-button>`\n          }\n          return nothing\n        })}\n            </div>\n          `\n        : nothing}\n\n      <!-- Spacer -->\n      <duet-spacer size=\"xxx-large\"></duet-spacer>\n    `\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'proto-dynamic-hero': ProtoDynamicHero;\n  }\n}\n"]}