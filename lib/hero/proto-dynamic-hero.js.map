{"version":3,"file":"proto-dynamic-hero.js","sourceRoot":"","sources":["../../src/hero/proto-dynamic-hero.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement, nothing } from \"lit\"\nimport { customElement, property } from \"lit/decorators.js\"\n\ninterface Sys {\n  sys: {\n    contentType: {\n      sys: {\n        id: string\n      }\n    }\n  }\n}\n\ninterface ButtonResource extends Sys {\n  fields: {\n    key?: string\n    text?: { value: string }\n    icon?: { value: string }\n    iconColor?: string\n    url?: { value: string }\n    variation?: string\n  }\n}\n\ninterface ContentResource extends Sys {\n  fields: {\n    key?: string\n    linkIconColorVariation?: string\n    linkVariation?: string\n    content?: {\n      fields?: {\n        icon?: string\n        key?: string\n        text?: string\n        url?: string\n      }\n    }[]\n  }\n}\n\ninterface HeroFields {\n  heading?: { value: string }\n  intro?: { content: { content: { value: string }[] }[] }\n  content?: ContentResource[]\n  buttons?: ButtonResource[]\n  icon?: string\n}\n\ninterface HeroItem {\n  fields?: HeroFields\n}\n\n@customElement(\"proto-dynamic-hero\")\nexport class ProtoDynamicHero extends LitElement {\n  @property({ type: Array }) props?: HeroItem[]\n\n  static override styles = css`\n    /* Only display the spacer in heading if a \"back link\" is present */\n\n    duet-page-heading div[slot='heading'] > duet-spacer:first-child {\n      display: none;\n    }\n\n    /* Only display the after-content spacer if content is present */\n\n    div[slot='main'] > duet-spacer + duet-spacer:last-child {\n      display: none;\n    }\n\n    .grid {\n      display: grid;\n      grid-template-columns: 1fr;\n      max-width: 100%;\n      align-items: center;\n    }\n\n    @media (min-width: 48em) {\n      .grid {\n        grid-template-columns: 1fr 1fr;\n        column-gap: 12px;\n        row-gap: 8px;\n      }\n    }\n\n    @media (min-width: 62em) {\n      .grid {\n        grid-template-columns: 1fr 1fr 1fr;\n        column-gap: 12px;\n        row-gap: 8px;\n      }\n    }\n  `\n\n  override render() {\n    const fields = this.props?.[0]?.fields\n    const headingObject = fields?.heading // { value?: string } | undefined\n    const introObject = fields?.intro\n    const content = fields?.content\n    const buttons = fields?.buttons\n\n    return html`\n      <duet-page-heading\n        data-testid=\"dynamichero_page-heading\"\n        icon=${fields?.icon ?? nothing}\n        id=\"dynamichero_page-heading\"\n        layout=\"auto\"\n      >\n        <!-- Title -->\n        ${\n          headingObject\n            ? html`\n              <duet-heading\n                data-testid=\"dynamichero_page-title\"\n                id=\"dynamichero_page-title\"\n                level=\"h1\"\n                margin=\"none\"\n                slot=\"heading\"\n              >\n                ${headingObject}\n              </duet-heading>\n            `\n            : null\n        }\n      </duet-page-heading>\n\n      <!-- Render if intro exists -->\n      ${\n        introObject\n          ? html`\n            <div>\n              ${introObject.content[0].content[0]?.value}\n              <duet-spacer size=\"large\"></duet-spacer>\n            </div>\n          `\n          : null\n      }\n\n      <!--  TODO: Check if this main is required. LLA might've forgotten it   -->\n      <div slot=\"main\">\n        <!-- Custom content -->\n        <slot></slot>\n      </div>\n\n      <!-- Dynamic Group -->\n      ${\n        content?.length && content.length > 0\n          ? html`\n            <div\n              class=\"grid\"\n              data-testid=\"dynamichero_content\"\n              id=\"dynamichero_content\"\n            >\n              ${content.map(content => {\n                if (content.sys.contentType.sys.id === \"dynamicGroup\") {\n                  return html`\n                    <duet-link\n                      id=${content.fields.key ?? nothing}\n                      icon=${content.fields.content?.[0]?.fields?.icon ?? nothing}\n                      icon-color=${content.fields.linkIconColorVariation ?? nothing}\n                      variation=${content.fields.linkVariation ?? nothing}\n                      url=${content.fields.content?.[0]?.fields?.url ?? nothing}\n                    >\n                      ${content.fields.content?.[0]?.fields?.text ?? \"\"}\n                    </duet-link>\n                  `\n                }\n                return nothing\n              })}\n            </div>\n          `\n          : nothing\n      }\n\n      <!-- Buttons -->\n      ${\n        buttons?.length && buttons.length > 0\n          ? html`\n            <div\n              class=\"grid\"\n              data-testid=\"dynamichero_buttons\"\n              id=\"dynamichero_buttons\"\n            >\n              ${buttons.map(button => {\n                if (button.sys.contentType.sys.id === \"linkResource\") {\n                  return html`\n                    <duet-link\n                      id=${button.fields.key ?? nothing}\n                      icon=${button.fields.icon?.value ?? nothing}\n                      url=${button.fields.url?.value ?? nothing}\n                      variation=\"button\"\n                    >\n                      ${button.fields.text ?? \"\"}\n                    </duet-link>\n                  `\n                }\n                if (button.sys.contentType.sys.id === \"buttonResource\") {\n                  return html` <duet-button\n                    id=${button.fields.key ?? nothing}\n                    icon=${button.fields.icon?.value ?? nothing}\n                    >${button.fields.text ?? \"\"}\n                  </duet-button>`\n                }\n                return nothing\n              })}\n            </div>\n          `\n          : nothing\n      }\n\n      <!-- Spacer -->\n      <duet-spacer size=\"xxx-large\"></duet-spacer>\n    `\n  }\n}\n\n"]}